name: 📦 Semantic Release

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write

env:
  NODE_VERSION: '20'
  GO_VERSION: '1.24'

jobs:
  release:
    name: 🚀 Semantic Release
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-release-${{ github.ref_name }}
      cancel-in-progress: false
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: 🐹 Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: 🦀 Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: 📦 Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: 📦 Install root dependencies
        run: |
          if [ -f "package.json" ]; then
            npm audit signatures
            npm ci
          else
            echo "ℹ️ No package.json found in root - skipping root dependencies"
          fi

      - name: 📥 Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: 🏗️ Build WASM (if exists)
        run: |
          if [ -d "wasm-frontend" ] && [ -f "wasm-frontend/Cargo.toml" ]; then
            cd wasm-frontend
            wasm-pack build --target web --out-dir ../static/wasm
            echo "✅ WASM build completed"
          else
            echo "ℹ️ No WASM project found - skipping"
          fi

      - name: 🏗️ Build frontend
        working-directory: frontend
        run: npm run build

      - name: 🏗️ Build backend
        run: |
          go mod download
          CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o portfolio-server main.go
          echo "✅ Backend build completed"

      - name: 🧪 Run tests
        run: |
          echo "Running tests..."
          go test -v ./... || echo "⚠️ No tests found or tests failed"

      - name: 🚀 Run semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  deploy-production:
    name: 🌍 Deploy to Production
    runs-on: ubuntu-latest
    needs: release
    if: github.ref == 'refs/heads/master'
    environment: production
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: 🚀 Deploy to production server
        run: |
          echo "🚀 Production deployment would happen here"
          echo "This could include:"
          echo "  • SSH deployment to your server"
          echo "  • Docker container update"
          echo "  • CDN cache invalidation"
          echo "  • Health checks"
          # Add your actual deployment commands here