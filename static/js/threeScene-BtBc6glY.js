function e(){import.meta.url,import("_").catch(()=>1),async function*(){}().next()}class t{constructor(){this.scene=null,this.camera=null,this.renderer=null,this.particles=[],this.geometricShapes=[],this.networkNodes=[],this.dataStreams=[],this.mouse={x:0,y:0},this.animationId=null,this.isLoaded=!1,this.clock=new THREE.Clock,this.composer=null,this.bloomPass=null,this.init(),this.setupEventListeners()}init(){this.scene=new THREE.Scene,this.scene.fog=new THREE.Fog(0,50,1e3),this.camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3),this.camera.position.set(0,0,50),this.renderer=new THREE.WebGLRenderer({canvas:document.getElementById("three-canvas"),antialias:!0,alpha:!0,powerPreference:"high-performance"}),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),this.renderer.setClearColor(0,0),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=THREE.PCFSoftShadowMap,this.renderer.toneMapping=THREE.ACESFilmicToneMapping,this.renderer.toneMappingExposure=1.2,this.setupPostProcessing(),this.createAdvancedParticles(),this.createNetworkVisualization(),this.createDataStreams(),this.createGeometricShapes(),this.createFloatingElements(),this.createHolographicElements(),this.animate(),this.isLoaded=!0}setupPostProcessing(){if(void 0!==THREE.EffectComposer){this.composer=new THREE.EffectComposer(this.renderer);const e=new THREE.RenderPass(this.scene,this.camera);this.composer.addPass(e),void 0!==THREE.UnrealBloomPass&&(this.bloomPass=new THREE.UnrealBloomPass(new THREE.Vector2(window.innerWidth,window.innerHeight),1.5,.4,.85),this.composer.addPass(this.bloomPass))}}createAdvancedParticles(){const e=300,t=new THREE.BufferGeometry,o=new Float32Array(900),i=new Float32Array(900),a=new Float32Array(e),n=new Float32Array(900),s=[new THREE.Color(6514417),new THREE.Color(9133302),new THREE.Color(440020),new THREE.Color(1096065)];for(let h=0;h<e;h++){const e=3*h,t=100*Math.random()+50,r=Math.random()*Math.PI*2,c=Math.random()*Math.PI;o[e]=t*Math.sin(c)*Math.cos(r),o[e+1]=t*Math.sin(c)*Math.sin(r),o[e+2]=t*Math.cos(c);const d=s[Math.floor(Math.random()*s.length)];i[e]=d.r,i[e+1]=d.g,i[e+2]=d.b,a[h]=3*Math.random()+1,n[e]=.02*(Math.random()-.5),n[e+1]=.02*(Math.random()-.5),n[e+2]=.02*(Math.random()-.5)}t.setAttribute("position",new THREE.BufferAttribute(o,3)),t.setAttribute("color",new THREE.BufferAttribute(i,3)),t.setAttribute("size",new THREE.BufferAttribute(a,1)),t.setAttribute("velocity",new THREE.BufferAttribute(n,3));const r=new THREE.ShaderMaterial({vertexShader:"\n            attribute float size;\n            attribute vec3 velocity;\n            varying vec3 vColor;\n            varying float vOpacity;\n            \n            void main() {\n                vColor = color;\n                vOpacity = sin(position.x * 0.01 + position.y * 0.01 + position.z * 0.01) * 0.5 + 0.5;\n                \n                vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n                gl_PointSize = size * (300.0 / -mvPosition.z);\n                gl_Position = projectionMatrix * mvPosition;\n            }\n        ",fragmentShader:"\n            varying vec3 vColor;\n            varying float vOpacity;\n            \n            void main() {\n                float distanceToCenter = distance(gl_PointCoord, vec2(0.5));\n                float alpha = 1.0 - smoothstep(0.0, 0.5, distanceToCenter);\n                gl_FragColor = vec4(vColor, alpha * vOpacity * 0.8);\n            }\n        ",transparent:!0,blending:THREE.AdditiveBlending,depthWrite:!1,vertexColors:!0});this.particles=new THREE.Points(t,r),this.scene.add(this.particles)}createNetworkVisualization(){const e=new THREE.SphereGeometry(.5,16,16);for(let t=0;t<20;t++){const o=new THREE.MeshPhongMaterial({color:(new THREE.Color).setHSL(.3*Math.random()+.7,.8,.6),transparent:!0,opacity:.8,emissive:(new THREE.Color).setHSL(.3*Math.random()+.7,.5,.1)}),i=new THREE.Mesh(e,o),a=t/20*Math.PI*2,n=30+20*Math.random(),s=40*(Math.random()-.5);i.position.x=Math.cos(a)*n,i.position.y=s,i.position.z=Math.sin(a)*n,i.userData={originalPosition:i.position.clone(),pulseSpeed:.02*Math.random()+.01,connections:[]},this.networkNodes.push(i),this.scene.add(i)}this.createNetworkConnections()}createNetworkConnections(){const e=new THREE.LineBasicMaterial({color:6514417,transparent:!0,opacity:.3});for(let t=0;t<this.networkNodes.length;t++){const o=this.networkNodes[t],i=Math.floor(3*Math.random())+2;for(let a=0;a<i;a++){const i=(t+a+1)%this.networkNodes.length,n=this.networkNodes[i],s=new THREE.BufferGeometry,r=new Float32Array([o.position.x,o.position.y,o.position.z,n.position.x,n.position.y,n.position.z]);s.setAttribute("position",new THREE.BufferAttribute(r,3));const h=new THREE.Line(s,e);this.scene.add(h),o.userData.connections.push(h)}}}createDataStreams(){for(let e=0;e<10;e++){const e=new THREE.BufferGeometry,t=50,o=new Float32Array(3*t),i=new Float32Array(3*t),a=new THREE.Vector3(100*(Math.random()-.5),100*(Math.random()-.5),100*(Math.random()-.5)),n=new THREE.Vector3(Math.random()-.5,Math.random()-.5,Math.random()-.5).normalize();for(let h=0;h<t;h++){const e=3*h,s=h/t;o[e]=a.x+n.x*s*30,o[e+1]=a.y+n.y*s*30,o[e+2]=a.z+n.z*s*30;const r=Math.sin(s*Math.PI);i[e]=.4+.6*r,i[e+1]=.4+.6*r,i[e+2]=1}e.setAttribute("position",new THREE.BufferAttribute(o,3)),e.setAttribute("color",new THREE.BufferAttribute(i,3));const s=new THREE.PointsMaterial({size:2,vertexColors:!0,transparent:!0,opacity:.7,blending:THREE.AdditiveBlending}),r=new THREE.Points(e,s);r.userData={speed:.02*Math.random()+.01,direction:n.clone()},this.dataStreams.push(r),this.scene.add(r)}}createHolographicElements(){const e=new THREE.PlaneGeometry(10,6),t=new THREE.MeshBasicMaterial({color:65535,transparent:!0,opacity:.1,wireframe:!0,side:THREE.DoubleSide});for(let o=0;o<3;o++){const o=new THREE.Mesh(e,t.clone());o.position.set(60*(Math.random()-.5),40*(Math.random()-.5),60*(Math.random()-.5)),o.rotation.x=Math.random()*Math.PI,o.rotation.y=Math.random()*Math.PI,o.userData={rotationSpeed:.01*Math.random()+.005,flickerSpeed:.1*Math.random()+.05},this.scene.add(o)}}createGeometricShapes(){const e=[{geometry:new THREE.TetrahedronGeometry(2),color:6514417},{geometry:new THREE.OctahedronGeometry(1.5),color:9133302},{geometry:new THREE.IcosahedronGeometry(1.2),color:440020},{geometry:new THREE.DodecahedronGeometry(1),color:1096065}];e.forEach((t,o)=>{const i=new THREE.MeshPhongMaterial({color:t.color,transparent:!0,opacity:.7,shininess:100}),a=new THREE.Mesh(t.geometry,i),n=o/e.length*Math.PI*2;a.position.x=30*Math.cos(n),a.position.y=30*Math.sin(n),a.position.z=-20,a.userData={rotationSpeed:{x:.02*Math.random()-.01,y:.02*Math.random()-.01,z:.02*Math.random()-.01},originalPosition:a.position.clone()},this.geometricShapes.push(a),this.scene.add(a)});const t=new THREE.AmbientLight(4210752,.6);this.scene.add(t);const o=new THREE.DirectionalLight(16777215,.8);o.position.set(10,10,5),this.scene.add(o)}createFloatingElements(){[new THREE.SphereGeometry(5,16,16),new THREE.BoxGeometry(6,6,6),new THREE.ConeGeometry(3,8,8),new THREE.TorusGeometry(4,1,8,16)].forEach((e,t)=>{const o=new THREE.MeshBasicMaterial({color:6514417,wireframe:!0,transparent:!0,opacity:.3}),i=new THREE.Mesh(e,o);i.position.x=80*(Math.random()-.5),i.position.y=80*(Math.random()-.5),i.position.z=80*(Math.random()-.5),i.userData={floatSpeed:.02*Math.random()+.01,floatRange:10*Math.random()+5,originalY:i.position.y},this.scene.add(i)})}setupEventListeners(){window.addEventListener("mousemove",e=>{this.mouse.x=e.clientX/window.innerWidth*2-1,this.mouse.y=-e.clientY/window.innerHeight*2+1}),window.addEventListener("resize",()=>{this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)}),window.addEventListener("scroll",()=>{this.isLoaded&&this.updateParallax()})}updateParallax(){const e=window.pageYOffset/(document.body.scrollHeight-window.innerHeight);this.camera.position.y=20*e,this.camera.rotation.x=.1*e,this.particles&&(this.particles.rotation.y=.5*e),this.geometricShapes.forEach((t,o)=>{const i=.1*o;t.position.y=t.userData.originalPosition.y+5*Math.sin(e*Math.PI*2+i)})}animate(){this.animationId=requestAnimationFrame(()=>this.animate());const e=this.clock.getElapsedTime();if(this.clock.getDelta(),this.particles){this.particles.rotation.x=.05*e,this.particles.rotation.y=.08*e;const t=this.particles.geometry.attributes.position.array,o=this.particles.geometry.attributes.velocity.array;for(let e=0;e<t.length;e+=3)t[e]+=o[e],t[e+1]+=o[e+1],t[e+2]+=o[e+2],Math.abs(t[e])>100&&(o[e]*=-1),Math.abs(t[e+1])>100&&(o[e+1]*=-1),Math.abs(t[e+2])>100&&(o[e+2]*=-1);this.particles.geometry.attributes.position.needsUpdate=!0,this.particles.rotation.x+=.05*this.mouse.y,this.particles.rotation.y+=.05*this.mouse.x}this.networkNodes.forEach((t,o)=>{const i=.3*Math.sin(e*t.userData.pulseSpeed)+1;t.scale.setScalar(i),t.position.y=t.userData.originalPosition.y+2*Math.sin(.5*e+o),t.material.emissiveIntensity=.5*i}),this.dataStreams.forEach(e=>{e.rotation.x+=e.userData.speed,e.rotation.y+=.7*e.userData.speed,e.position.add(e.userData.direction.clone().multiplyScalar(10*e.userData.speed)),e.position.length()>200&&e.position.set(100*(Math.random()-.5),100*(Math.random()-.5),100*(Math.random()-.5))}),this.geometricShapes.forEach((e,t)=>{e.rotation.x+=e.userData.rotationSpeed.x,e.rotation.y+=e.userData.rotationSpeed.y,e.rotation.z+=e.userData.rotationSpeed.z;const o=e.position.distanceTo(new THREE.Vector3(10*this.mouse.x,10*this.mouse.y,0)),i=Math.max(0,1-o/50);e.rotation.x+=.02*this.mouse.y*i,e.rotation.y+=.02*this.mouse.x*i,e.material.emissive&&(e.material.emissiveIntensity=.5*i)}),this.scene.children.forEach(t=>{if(t.userData&&t.userData.floatSpeed&&(t.position.y=t.userData.originalY+Math.sin(e*t.userData.floatSpeed)*t.userData.floatRange,t.rotation.x=.2*e,t.rotation.z=.1*e),t.userData&&t.userData.flickerSpeed){t.rotation.y+=t.userData.rotationSpeed;const o=.5*Math.sin(e*t.userData.flickerSpeed)+.5;t.material.opacity=.1+.2*o}});const t=8*this.mouse.x,o=8*this.mouse.y;this.camera.position.x+=.02*(t-this.camera.position.x),this.camera.position.y+=.02*(o-this.camera.position.y);const i=new THREE.Vector3(2*this.mouse.x,2*this.mouse.y,0);this.camera.lookAt(i),this.composer?this.composer.render():this.renderer.render(this.scene,this.camera)}destroy(){this.animationId&&cancelAnimationFrame(this.animationId),this.scene.traverse(e=>{e.geometry&&e.geometry.dispose(),e.material&&(Array.isArray(e.material)?e.material.forEach(e=>e.dispose()):e.material.dispose())}),this.renderer.dispose()}}let o;document.addEventListener("DOMContentLoaded",()=>{setTimeout(()=>{o=new t,setTimeout(()=>{const e=document.getElementById("loader");e&&(e.classList.add("hidden"),setTimeout(()=>{e.style.display="none"},500))},1e3)},100)}),window.addEventListener("beforeunload",()=>{o&&o.destroy()});export{e as __vite_legacy_guard};
